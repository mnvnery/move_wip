/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
import { BinaryOpType, getBinaryOpString } from './binary_op_util';
import { getUnaryOpString, UnaryOpType } from './unary_op_util';
export const typeSnippet = (component) => {
    switch (component) {
        case 1:
            return 'f32';
        case 2:
            return 'vec2<f32>';
        case 3:
            return 'vec3<f32>';
        case 4:
            return 'vec4<f32>';
        default:
            throw new Error(`${component}-component is not supported.`);
    }
};
export function activationFnSnippet(activation, hasPreluActivationWeights = false, packed = false, coordsLength = 3) {
    if (activation === null) {
        return '';
    }
    let activationOpSnippet = '';
    if (activation === 'linear') {
        activationOpSnippet = getUnaryOpString(UnaryOpType.LINEAR);
    }
    else if (activation === 'relu') {
        activationOpSnippet = getUnaryOpString(UnaryOpType.RELU, packed);
    }
    else if (activation === 'elu') {
        activationOpSnippet = getUnaryOpString(UnaryOpType.ELU, packed);
    }
    else if (activation === 'relu6') {
        activationOpSnippet = getUnaryOpString(UnaryOpType.RELU6, packed);
    }
    else if (activation === 'prelu') {
        activationOpSnippet = getBinaryOpString(BinaryOpType.PRELU, packed);
    }
    else if (activation === 'sigmoid') {
        activationOpSnippet = getUnaryOpString(UnaryOpType.SIGMOID, packed);
    }
    else if (activation === 'leakyrelu') {
        activationOpSnippet = getUnaryOpString(UnaryOpType.LEAKYRELU, packed);
    }
    else {
        throw new Error(`Activation ${activation} has not been implemented for the WebGPU backend.`);
    }
    const elementSize = packed ? 4 : 1;
    const dataType = typeSnippet(elementSize);
    let activationFnSnippet = '';
    if (hasPreluActivationWeights) {
        activationFnSnippet = `
      fn activation(a : ${dataType}, coords : vec${coordsLength}<i32>) -> ${dataType} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${activationOpSnippet}
      }`;
    }
    else {
        activationFnSnippet = `
      fn activation(a : ${dataType}, coords : vec${coordsLength}<i32>) -> ${dataType} {
        ${activationOpSnippet}
      }`;
    }
    return activationFnSnippet;
}
export function biasActivationSnippet(hasBias, activation) {
    return `
      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}
      ${activation ? 'value = activation(value, coords);' : ''}
      `;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZhdGlvbl91dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1iYWNrZW5kLXdlYmdwdS9zcmMvYWN0aXZhdGlvbl91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUlILE9BQU8sRUFBQyxZQUFZLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUUsV0FBVyxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFFOUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQUMsU0FBaUIsRUFBRSxFQUFFO0lBQy9DLFFBQVEsU0FBUyxFQUFFO1FBQ2pCLEtBQUssQ0FBQztZQUNKLE9BQU8sS0FBSyxDQUFDO1FBQ2YsS0FBSyxDQUFDO1lBQ0osT0FBTyxXQUFXLENBQUM7UUFDckIsS0FBSyxDQUFDO1lBQ0osT0FBTyxXQUFXLENBQUM7UUFDckIsS0FBSyxDQUFDO1lBQ0osT0FBTyxXQUFXLENBQUM7UUFDckI7WUFDRSxNQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsU0FBUyw4QkFBOEIsQ0FBQyxDQUFDO0tBQy9EO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxVQUFVLG1CQUFtQixDQUMvQixVQUFtQyxFQUFFLHlCQUF5QixHQUFHLEtBQUssRUFDdEUsTUFBTSxHQUFHLEtBQUssRUFBRSxZQUFZLEdBQUcsQ0FBQztJQUNsQyxJQUFJLFVBQVUsS0FBSyxJQUFJLEVBQUU7UUFDdkIsT0FBTyxFQUFFLENBQUM7S0FDWDtJQUVELElBQUksbUJBQW1CLEdBQUcsRUFBRSxDQUFDO0lBQzdCLElBQUksVUFBVSxLQUFLLFFBQVEsRUFBRTtRQUMzQixtQkFBbUIsR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDNUQ7U0FBTSxJQUFJLFVBQVUsS0FBSyxNQUFNLEVBQUU7UUFDaEMsbUJBQW1CLEdBQUcsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztLQUNsRTtTQUFNLElBQUksVUFBVSxLQUFLLEtBQUssRUFBRTtRQUMvQixtQkFBbUIsR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0tBQ2pFO1NBQU0sSUFBSSxVQUFVLEtBQUssT0FBTyxFQUFFO1FBQ2pDLG1CQUFtQixHQUFHLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDbkU7U0FBTSxJQUFJLFVBQVUsS0FBSyxPQUFPLEVBQUU7UUFDakMsbUJBQW1CLEdBQUcsaUJBQWlCLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztLQUNyRTtTQUFNLElBQUksVUFBVSxLQUFLLFNBQVMsRUFBRTtRQUNuQyxtQkFBbUIsR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0tBQ3JFO1NBQU0sSUFBSSxVQUFVLEtBQUssV0FBVyxFQUFFO1FBQ3JDLG1CQUFtQixHQUFHLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDdkU7U0FBTTtRQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMsY0FDWixVQUFVLG1EQUFtRCxDQUFDLENBQUM7S0FDcEU7SUFDRCxNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25DLE1BQU0sUUFBUSxHQUFHLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMxQyxJQUFJLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztJQUM3QixJQUFJLHlCQUF5QixFQUFFO1FBQzdCLG1CQUFtQixHQUFHOzBCQUNBLFFBQVEsaUJBQWlCLFlBQVksYUFDdkQsUUFBUTs7VUFFTixtQkFBbUI7UUFDckIsQ0FBQztLQUNOO1NBQU07UUFDTCxtQkFBbUIsR0FBRzswQkFDQSxRQUFRLGlCQUFpQixZQUFZLGFBQ3ZELFFBQVE7VUFDTixtQkFBbUI7UUFDckIsQ0FBQztLQUNOO0lBQ0QsT0FBTyxtQkFBbUIsQ0FBQztBQUM3QixDQUFDO0FBRUQsTUFBTSxVQUFVLHFCQUFxQixDQUNqQyxPQUFnQixFQUFFLFVBQW1DO0lBQ3ZELE9BQU87UUFDRCxPQUFPLENBQUMsQ0FBQyxDQUFDLGdEQUFnRCxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQy9ELFVBQVUsQ0FBQyxDQUFDLENBQUMsb0NBQW9DLENBQUMsQ0FBQyxDQUFDLEVBQUU7T0FDdkQsQ0FBQztBQUNSLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YmFja2VuZF91dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge0JpbmFyeU9wVHlwZSwgZ2V0QmluYXJ5T3BTdHJpbmd9IGZyb20gJy4vYmluYXJ5X29wX3V0aWwnO1xuaW1wb3J0IHtnZXRVbmFyeU9wU3RyaW5nLCBVbmFyeU9wVHlwZX0gZnJvbSAnLi91bmFyeV9vcF91dGlsJztcblxuZXhwb3J0IGNvbnN0IHR5cGVTbmlwcGV0ID0gKGNvbXBvbmVudDogbnVtYmVyKSA9PiB7XG4gIHN3aXRjaCAoY29tcG9uZW50KSB7XG4gICAgY2FzZSAxOlxuICAgICAgcmV0dXJuICdmMzInO1xuICAgIGNhc2UgMjpcbiAgICAgIHJldHVybiAndmVjMjxmMzI+JztcbiAgICBjYXNlIDM6XG4gICAgICByZXR1cm4gJ3ZlYzM8ZjMyPic7XG4gICAgY2FzZSA0OlxuICAgICAgcmV0dXJuICd2ZWM0PGYzMj4nO1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7Y29tcG9uZW50fS1jb21wb25lbnQgaXMgbm90IHN1cHBvcnRlZC5gKTtcbiAgfVxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGFjdGl2YXRpb25GblNuaXBwZXQoXG4gICAgYWN0aXZhdGlvbjogYmFja2VuZF91dGlsLkFjdGl2YXRpb24sIGhhc1ByZWx1QWN0aXZhdGlvbldlaWdodHMgPSBmYWxzZSxcbiAgICBwYWNrZWQgPSBmYWxzZSwgY29vcmRzTGVuZ3RoID0gMyk6IHN0cmluZyB7XG4gIGlmIChhY3RpdmF0aW9uID09PSBudWxsKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgbGV0IGFjdGl2YXRpb25PcFNuaXBwZXQgPSAnJztcbiAgaWYgKGFjdGl2YXRpb24gPT09ICdsaW5lYXInKSB7XG4gICAgYWN0aXZhdGlvbk9wU25pcHBldCA9IGdldFVuYXJ5T3BTdHJpbmcoVW5hcnlPcFR5cGUuTElORUFSKTtcbiAgfSBlbHNlIGlmIChhY3RpdmF0aW9uID09PSAncmVsdScpIHtcbiAgICBhY3RpdmF0aW9uT3BTbmlwcGV0ID0gZ2V0VW5hcnlPcFN0cmluZyhVbmFyeU9wVHlwZS5SRUxVLCBwYWNrZWQpO1xuICB9IGVsc2UgaWYgKGFjdGl2YXRpb24gPT09ICdlbHUnKSB7XG4gICAgYWN0aXZhdGlvbk9wU25pcHBldCA9IGdldFVuYXJ5T3BTdHJpbmcoVW5hcnlPcFR5cGUuRUxVLCBwYWNrZWQpO1xuICB9IGVsc2UgaWYgKGFjdGl2YXRpb24gPT09ICdyZWx1NicpIHtcbiAgICBhY3RpdmF0aW9uT3BTbmlwcGV0ID0gZ2V0VW5hcnlPcFN0cmluZyhVbmFyeU9wVHlwZS5SRUxVNiwgcGFja2VkKTtcbiAgfSBlbHNlIGlmIChhY3RpdmF0aW9uID09PSAncHJlbHUnKSB7XG4gICAgYWN0aXZhdGlvbk9wU25pcHBldCA9IGdldEJpbmFyeU9wU3RyaW5nKEJpbmFyeU9wVHlwZS5QUkVMVSwgcGFja2VkKTtcbiAgfSBlbHNlIGlmIChhY3RpdmF0aW9uID09PSAnc2lnbW9pZCcpIHtcbiAgICBhY3RpdmF0aW9uT3BTbmlwcGV0ID0gZ2V0VW5hcnlPcFN0cmluZyhVbmFyeU9wVHlwZS5TSUdNT0lELCBwYWNrZWQpO1xuICB9IGVsc2UgaWYgKGFjdGl2YXRpb24gPT09ICdsZWFreXJlbHUnKSB7XG4gICAgYWN0aXZhdGlvbk9wU25pcHBldCA9IGdldFVuYXJ5T3BTdHJpbmcoVW5hcnlPcFR5cGUuTEVBS1lSRUxVLCBwYWNrZWQpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihgQWN0aXZhdGlvbiAke1xuICAgICAgICBhY3RpdmF0aW9ufSBoYXMgbm90IGJlZW4gaW1wbGVtZW50ZWQgZm9yIHRoZSBXZWJHUFUgYmFja2VuZC5gKTtcbiAgfVxuICBjb25zdCBlbGVtZW50U2l6ZSA9IHBhY2tlZCA/IDQgOiAxO1xuICBjb25zdCBkYXRhVHlwZSA9IHR5cGVTbmlwcGV0KGVsZW1lbnRTaXplKTtcbiAgbGV0IGFjdGl2YXRpb25GblNuaXBwZXQgPSAnJztcbiAgaWYgKGhhc1ByZWx1QWN0aXZhdGlvbldlaWdodHMpIHtcbiAgICBhY3RpdmF0aW9uRm5TbmlwcGV0ID0gYFxuICAgICAgZm4gYWN0aXZhdGlvbihhIDogJHtkYXRhVHlwZX0sIGNvb3JkcyA6IHZlYyR7Y29vcmRzTGVuZ3RofTxpMzI+KSAtPiAke1xuICAgICAgICBkYXRhVHlwZX0ge1xuICAgICAgICBsZXQgYiA9IGdldFByZWx1QWN0aXZhdGlvbldlaWdodHNCeU91dHB1dENvb3Jkcyhjb29yZHMpO1xuICAgICAgICAke2FjdGl2YXRpb25PcFNuaXBwZXR9XG4gICAgICB9YDtcbiAgfSBlbHNlIHtcbiAgICBhY3RpdmF0aW9uRm5TbmlwcGV0ID0gYFxuICAgICAgZm4gYWN0aXZhdGlvbihhIDogJHtkYXRhVHlwZX0sIGNvb3JkcyA6IHZlYyR7Y29vcmRzTGVuZ3RofTxpMzI+KSAtPiAke1xuICAgICAgICBkYXRhVHlwZX0ge1xuICAgICAgICAke2FjdGl2YXRpb25PcFNuaXBwZXR9XG4gICAgICB9YDtcbiAgfVxuICByZXR1cm4gYWN0aXZhdGlvbkZuU25pcHBldDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJpYXNBY3RpdmF0aW9uU25pcHBldChcbiAgICBoYXNCaWFzOiBib29sZWFuLCBhY3RpdmF0aW9uOiBiYWNrZW5kX3V0aWwuQWN0aXZhdGlvbik6IHN0cmluZyB7XG4gIHJldHVybiBgXG4gICAgICAke2hhc0JpYXMgPyAndmFsdWUgPSB2YWx1ZSArIGdldEJpYXNCeU91dHB1dENvb3Jkcyhjb29yZHMpOycgOiAnJ31cbiAgICAgICR7YWN0aXZhdGlvbiA/ICd2YWx1ZSA9IGFjdGl2YXRpb24odmFsdWUsIGNvb3Jkcyk7JyA6ICcnfVxuICAgICAgYDtcbn1cbiJdfQ==